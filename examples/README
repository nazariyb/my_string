it is thought that terminal is opened in the next path
../examples$, where:
some_folder/
    |
    |__/library/
    |    |
    |    |__/bin/
    |    |   |
    |    |   |__/lib_my_string.so
    |    |
    |    |__(other files)
    |
    |__/examples/
         |
         |__/bin/
         |   |
         |   |__/examples
         |
         |__(other files)

to build executable using cmake you should enter the next commands
1)../examples$ mkdir <build folder> && cd <build folder>

f. e.
../examples$ mkdir build && cd build

2)../examples/<build folder>$ cmake .. && make

f. e.
..examples/build$ cmake .. && make
*output*
-- The C compiler identification is GNU 7.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: <your path>/examples/build
Scanning dependencies of target examples
[ 50%] Building C object CMakeFiles/examples.dir/examples.c.o
[100%] Linking C executable examples
[100%] Built target examples

3)../prog2/<build folder>$ cd ..

now, you can run program calling it with arguments:
    <input file name>.txt* (required)
    <input file name>.<extension> (optional, it will be autogenerated otherwise)
    *it's required for input file to be a text document (with extension ".txt")

it will be look like:
../examples$ ./bin/examples


# there is also a possibility to compile program manually:
# (! it will be saved in the same directory but not in bin/)
../examples$ gcc examples.c ../library/my_string.c ../library/my_string.h -o examplestest -I ../library

# if you wish compile the program with debug mode
../examples$ gcc examples.c ../library/my_string.c ../library/my_string.h -o examplesdebug -I ../library -g -W -Og

# and run it with valgring
../examples$ valgrind --leak-check=full --track-origins=yes
